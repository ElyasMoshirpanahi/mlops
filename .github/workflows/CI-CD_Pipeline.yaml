name: CI/CD Pipelines
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"


      - name: Add project root to PYTHONPATH
        run: |
          export PYTHONPATH=$PYTHONPATH${{ env.PATH_SEPARATOR }}$GITHUB_WORKSPACE

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Testing with pytest
        run: |
          export PYTHONPATH=$PYTHONPATH${{ env.PATH_SEPARATOR }}$GITHUB_WORKSPACE
          python src/cli.py download --output-file src/isnet/artifacts/model.pth
          python src/cli.py convert --input-file src/isnet/artifacts/model.pth --output-file src/isnet/artifacts/model.pt --to-torchscript
          pytest src/tests
        
      - name: Build image
        run: docker build -t coolsegmenter .

  deploy:
    needs: build  # The deploy job depends on the successful completion of the build job
    runs-on: ubuntu-latest
    steps:
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_USERNAME }}
          password: ${{ secrets.AZURE_PASSWORD }}

      - name: Tag Docker image with ACR URL
        run: docker tag coolsegmenter ${{ secrets.AZURE_LOGIN_SERVER }}${{ env.PATH_SEPARATOR }}coolsegmenter

      - name: Push Docker image to ACR
        run: docker push ${{ secrets.AZURE_LOGIN_SERVER }}${{ env.PATH_SEPARATOR }}coolsegmenter
      
      - uses: azure/webapps-deploy@v2
        with: 
          app-name: "fastapisegmenation"
          images: ${{ secrets.AZURE_LOGIN_SERVER }}${{ env.PATH_SEPARATOR }}coolsegmenter